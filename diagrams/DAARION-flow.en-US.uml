@startuml DAARIONContract
actor User
actor Owner

participant DAARION as DAARION

== Initialization ==
Owner -> DAARION : initialize(wallet1, owner)
DAARION -> DAARION : Initialize contract state

== Transfer with Tax ==
User -> DAARION : transfer(recipient, amount)
alt Sender is excluded from tax
    DAARION -> recipient : transfer amount
else Sender is not excluded from tax
    DAARION -> BURN_ADDRESS : transfer taxAmount (amount * salesTax / 10000)
    DAARION -> recipient : transfer amount - taxAmount
    DAARION -> User : emit TransferWithTax event
end

== Transfer from with Tax ==
User -> DAARION : transferFrom(sender, recipient, amount)
DAARION -> DAARION : check allowance and balance
alt Allowance and balance sufficient
    alt Sender is excluded from tax
        DAARION -> recipient : transfer amount
    else Sender is not excluded from tax
        DAARION -> BURN_ADDRESS : transfer taxAmount (amount * salesTax / 10000)
        DAARION -> recipient : transfer amount - taxAmount
        DAARION -> User : emit TransferWithTax event
    end
    DAARION -> sender : decrease allowance
else Allowance or balance insufficient
    DAARION -> User : revert transaction
end

== Set Sales Tax ==
Owner -> DAARION : setSalesTax(tax)
alt Tax <= 5%
    DAARION -> DAARION : update salesTax
    DAARION -> Owner : emit SalesTaxSet event
else Tax > 5%
    DAARION -> Owner : revert transaction
end

== Set Wallet1 ==
Owner -> DAARION : setWallet1(wallet1)
DAARION -> DAARION : update wallet1
DAARION -> Owner : emit Wallet1Set event

== Exclude/Include from Tax ==
Owner -> DAARION : excludeFromTax(account)
DAARION -> DAARION : update _isExcludedFromTax(account, true)
DAARION -> Owner : emit ExcludedFromTax event

Owner -> DAARION : includeInTax(account)
DAARION -> DAARION : update _isExcludedFromTax(account, false)
DAARION -> Owner : emit IncludedInTax event

== Mint/Burn Tokens ==
Owner -> DAARION : mint(to, amount)
DAARION -> DAARION : mint tokens

Owner -> DAARION : burn(amount)
DAARION -> DAARION : burn tokens

== Pause/Unpause ==
Owner -> DAARION : pause()
DAARION -> DAARION : pause contract

Owner -> DAARION : unpause()
DAARION -> DAARION : unpause contract

@enduml